<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UIProject.Styles"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:iconButtonExt="clr-namespace:UIProject.ServiceProviders">

    <Style TargetType="{x:Type Button}" x:Key="UIProjectMediumButtonStyle" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Height" Value="auto"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="UIProjectLightButtonStyle" BasedOn="{StaticResource MaterialDesignRaisedLightButton}">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Height" Value="auto"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="UIProjectDarkButtonStyle" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Height" Value="auto"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="UIProjectLightShadowButtonStyle" BasedOn="{StaticResource UIProjectLightButtonStyle}">
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth3"/>
        <Setter Property="materialDesign:ShadowAssist.Darken" Value="True"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="UIProjectMediumShadowButtonStyle" BasedOn="{StaticResource UIProjectMediumButtonStyle}">
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth3"/>
        <Setter Property="materialDesign:ShadowAssist.Darken" Value="True"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="UIProjectDarkShadowButtonStyle" BasedOn="{StaticResource UIProjectDarkButtonStyle}">
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth3"/>
        <Setter Property="materialDesign:ShadowAssist.Darken" Value="True"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="UIProjectIconButtonStyle" BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
        
    <Style TargetType="{x:Type Button}" x:Key="UIProjectShadowIconButtonStyle" BasedOn="{StaticResource UIProjectIconButtonStyle}">
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth3"/>
        <Setter Property="materialDesign:ShadowAssist.Darken" Value="true"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="UIProjectLightIconButtonStyle" BasedOn="{StaticResource UIProjectIconButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
        <Setter Property="Padding" Value="8"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="UIProjectDarkIconButtonStyle" BasedOn="{StaticResource UIProjectIconButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
        <Setter Property="Padding" Value="8"/>
    </Style>
    
    <!-- This style is used for any control that wants to have the clickable behavior -->
    <!-- This can be done by setting button as root element -->
    <Style TargetType="{x:Type Button}" x:Key="ClickableTemplateButtonStyle" BasedOn="{StaticResource UIProjectLightButtonStyle}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="materialDesign:ShadowAssist.ShadowEdges" Value="None"/>
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0"/>
        <Setter Property="materialDesign:ShadowAssist.Darken" Value="False"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
    </Style>


    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MaterialDesignRadioButton}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Normal"/>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource UIProjectLightButtonStyle}" x:Key="UIProjectAcceptButtonStyle">
        <Setter Property="Width" Value="100"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10"/>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource UIProjectAcceptButtonStyle}" x:Key="UIProjectCancelButtonStyle">
        <Setter Property="Background" Value="#ED2939"/>
    </Style>
    
</ResourceDictionary>